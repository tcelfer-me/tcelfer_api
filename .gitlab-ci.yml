# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/ruby/tags/
image: ruby:3.0.4-alpine3.15
default:
  tags:
    - agarg-public-projects

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE != "merge_request_event"'
      when: always
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never

variables:
  POSTGRES_DB:               tcelfer_dev
  POSTGRES_USER:             tcelfer_dev
  POSTGRES_HOST_AUTH_METHOD: trust

stages:
  - cache_up
  - cron
  - test

cache: &global_cache
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - vendor/ruby

cache_warm_up:
  stage: cache_up
  cache:
    <<: *global_cache
    policy: pull-push
  before_script:
    - apk add --update build-base postgresql-dev
    - bundle config set path vendor
  script:
    - bundle install -j $(nproc)

cron-outdated:
  stage: cron
  cache:
    <<: *global_cache
    policy: pull
  before_script:
    - bundle config set path vendor
  script:
    - 'bundle outdated --only-explicit --porcelain --strict || :'
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: always
    - when: never

rubocop:
  stage: test
  cache:
    <<: *global_cache
    policy: pull
  before_script:
    - bundle config set path vendor
  script:
    - bundle exec rubocop
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - when: always


api_console:
  services:
    - postgres:14.3-alpine
  stage: test
  cache:
    <<: *global_cache
    policy: pull
  before_script:
    # This is all very messy for now. Sorry
    - bundle config set path vendor
    - apk add --update httpie zsh less build-base postgresql-dev postgresql-client
    - cp config/tc_api.sample-dev.yml config/tc_api.dev.yml
    - sh .ci/init-tcelfer-db.sh
    - bundle exec puma&
    - sleep 10
  script:
    - zsh .ci/test_user_gen.zsh
    - kill $(jobs -p)
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - when: always
